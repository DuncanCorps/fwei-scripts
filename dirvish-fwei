#!/bin/bash

function log() {
  echo `date --utc +%F\ %T` ${*}
}

BACKUP_LABEL=/backup
BACKUP_MOUNT_POINT=/backup

log Started

mountpoint --quiet ${BACKUP_MOUNT_POINT}
leaveBackupMounted=${?}

if [ ${leaveBackupMounted} -eq 0 ] ; then
  log ${BACKUP_MOUNT_POINT} already mounted
else
  mkdir --mode=0700 --parents ${BACKUP_MOUNT_POINT}
  mount --label ${BACKUP_LABEL} ${BACKUP_MOUNT_POINT}
fi

if mountpoint --quiet ${BACKUP_MOUNT_POINT} ; then
  backupDevice=`mount --show-labels | fgrep \[${BACKUP_LABEL}\] | cut --delimiter=\  --fields=1`
  dirvishBank=`grep --after-context=1 \^bank:\$ /etc/dirvish/master.conf | tail --lines=1`
  dirvishVault=`hostname --short`-vault
  dirvishBankVault=${dirvishBank}/${dirvishVault}
  mkdir --parents ${dirvishBankVault}/dirvish
  fileExclude=${dirvishBankVault}/dirvish/file-exclude
  echo "client: `hostname`
file-exclude: ${fileExclude}
tree: /" >  ${dirvishBankVault}/dirvish/default.conf

  log Backup device is ${backupDevice}
  log Dirvish bank is ${dirvishBank}
  log Dirvish vault is ${dirvishVault}
  log File exclude is ${fileExclude}

  # Exclude everything which is owned by a package and isn't configuration
  excludes1=`mktemp`
  rpm --query --all --queryformat "[%{FILEFLAGS:fflags} %{FILENAMES}\n]" | grep -v "^[^ ]*c[^ ]* " | cut --delimiter=\  --fields=2- > ${excludes1}

  # Exclude everything which is a block (buffered) special, character (unbuffered) special, named pipe (FIFO) or socket (but don't waste time looking on the backup device!)
  excludes2=`mktemp`
  find / -path ${BACKUP_MOUNT_POINT} -prune -o -type b -o -type c -o -type p -o -type s > ${excludes2}

  sort --unique ${excludes1} ${excludes2} | while read exclude ; do
    # Never exclude a directory
    if [ -e "${exclude}" ] && [ ! -d "${exclude}" ] ; then
      echo ${exclude}
    fi
  done > ${fileExclude}

  rm --force ${excludes1} ${excludes2}

  log ${fileExclude} contains `wc --lines ${fileExclude} | cut --delimiter=\  --fields=1` lines
  log Running dirvish-expire for vault ${dirvishVault}

  if dirvish-expire --vault ${dirvishVault} ; then
    log dirvish-expire success
    log Running dirvish for vault ${dirvishVault}

    if dirvish --vault ${dirvishVault} ; then
      log dirvish success
    elif dirvish --init --vault ${dirvishVault} ; then
      log dirvish --init success
    else
      log dirvish failure, exit code ${?}
    fi
  else
    log dirvish-expire failure, exit code ${?}
  fi

  # Ensure that the absolute minimum of space is being used by hard linking duplicate files in the backup of today
  # log Finding duplicates
  # ${BACKUP_MOUNT_POINT}
  # /usr/share/fslint/fslint/findup -m ${dirvishBankVault}/`date +%F`.*

  if [ ${leaveBackupMounted} -eq 0 ] ; then
    log Leaving ${BACKUP_MOUNT_POINT} mounted
  else
    log Unmounting ${BACKUP_MOUNT_POINT}
    umount ${BACKUP_MOUNT_POINT}
    dayOfWeek=`date --utc +%u`

    if [ ${dayOfWeek} -eq 1 ] ; then
      # It is Monday, so do some housekeeping
      log Doing Monday housekeeping
      # Check the filesystem for errors and try to fix them
      log Checking filesystem
      fsck.ext4 -f -v -y ${backupDevice}
    fi
  fi

  hdparm -yY ${backupDevice}
else
  log ${BACKUP_MOUNT_POINT} not mounted
fi

log Finished

exit 0
